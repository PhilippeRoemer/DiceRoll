{"version":3,"sources":["App.js","index.js"],"names":["require","config","App","useState","userDice","setUserDice","computerDice","setComputerDice","giphy","setGiphy","api_key","process","window","onload","document","getElementById","innerHTML","randomDiceUser","Math","floor","random","randomDiceComputer","axios","get","then","res","data","images","downsized_large","url","className","src","type","step","min","max","id","onClick","UserScore","ComputerScore","CurrentAmount","bet","value","currentFunds","parseInt","addFunds","removeFunds","alert","classList","add","remove","class","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.60ac3a03.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\n\nrequire(\"dotenv\").config();\n\nfunction App() {\n    const [userDice, setUserDice] = useState([]);\n    const [computerDice, setComputerDice] = useState([]);\n    const [giphy, setGiphy] = useState([]);\n    const api_key = process.env.REACT_APP_API_KEY;\n\n    window.onload = function () {\n        var fund = 1000;\n        document.getElementById(\"currentAmount\").innerHTML = fund;\n\n        const randomDiceUser = Math.floor(Math.random() * 6) + 1;\n        const randomDiceComputer = Math.floor(Math.random() * 6) + 1;\n\n        setUserDice(\"/images/dice/dice_\" + randomDiceUser + \".png\");\n        setComputerDice(\"/images/dice/dice_\" + randomDiceComputer + \".png\");\n        axios.get(\"https://api.giphy.com/v1/gifs/random?api_key=\" + api_key + \"&tag=good-luck&rating=g\").then((res) => {\n            setGiphy(res.data.data.images.downsized_large.url);\n        });\n    };\n\n    function rollDice() {\n        const UserScore = Math.floor(Math.random() * 6) + 1;\n        const ComputerScore = Math.floor(Math.random() * 6) + 1;\n        const CurrentAmount = document.getElementById(\"currentAmount\").innerHTML;\n\n        const bet = document.getElementById(\"userBet\").value;\n        const currentFunds = parseInt(CurrentAmount);\n        const addFunds = parseInt(CurrentAmount) + parseInt(bet);\n        const removeFunds = parseInt(CurrentAmount) - parseInt(bet);\n\n        if (bet == 0 || NaN || undefined) {\n            alert(\"Please enter a number.\");\n        } else if (currentFunds === 0) {\n            /* If you run out of funds */\n            document.getElementById(\"fundsDepleted\").innerHTML = \"It looks like you're out of money. Go do something else.\";\n        } else if (bet > currentFunds) {\n            /* If you bet more than you have*/\n            alert(\"You can't bet more than you have.\");\n        } else {\n            /* Output dice images */\n            setUserDice(\"/images/dice/dice_\" + UserScore + \".png\");\n            setComputerDice(\"/images/dice/dice_\" + ComputerScore + \".png\");\n            if (UserScore > ComputerScore) {\n                /* If the user's roll is higher than the computer's */\n                axios.get(\"https://api.giphy.com/v1/gifs/random?api_key=\" + api_key + \"&tag=winner&rating=g\").then((res) => {\n                    setGiphy(res.data.data.images.downsized_large.url);\n                });\n                document.getElementById(\"userDice\").classList.add(\"diceWinner\");\n                document.getElementById(\"computerDice\").classList.remove(\"diceWinner\");\n                document.getElementById(\"outcome\").src = process.env.PUBLIC_URL + \"/images/won.png\";\n                document.getElementById(\"currentAmount\").innerHTML = addFunds;\n                document.getElementById(\"userBet\").value = \"\";\n            } else if (UserScore === ComputerScore) {\n                /* If it's a tie score */\n                axios.get(\"https://api.giphy.com/v1/gifs/random?api_key=\" + api_key + \"&tag=tie+score&rating=g\").then((res) => {\n                    setGiphy(res.data.data.images.downsized_large.url);\n                });\n                document.getElementById(\"userDice\").classList.add(\"diceWinner\");\n                document.getElementById(\"computerDice\").classList.add(\"diceWinner\");\n                document.getElementById(\"outcome\").src = process.env.PUBLIC_URL + \"/images/tie.png\";\n                document.getElementById(\"userBet\").value = \"\";\n            } else {\n                /* If the computer's roll is higher than the user's */\n                axios.get(\"https://api.giphy.com/v1/gifs/random?api_key=\" + api_key + \"&tag=loser&rating=g\").then((res) => {\n                    setGiphy(res.data.data.images.downsized_large.url);\n                });\n                document.getElementById(\"userDice\").classList.remove(\"diceWinner\");\n                document.getElementById(\"computerDice\").classList.add(\"diceWinner\");\n                document.getElementById(\"outcome\").src = process.env.PUBLIC_URL + \"/images/lost.png\";\n                document.getElementById(\"currentAmount\").innerHTML = removeFunds;\n                document.getElementById(\"userBet\").value = \"\";\n            }\n        }\n    }\n    return (\n        <div className=\"container\">\n            <img src={process.env.PUBLIC_URL + \"/images/logo.png\"} className=\"logo\" />\n            <div className=\"center\">\n                <p>Place your bet</p>\n                <input type=\"number\" step=\"100\" min=\"0\" max=\"1000\" id=\"userBet\" className=\"betInput\" />\n                <p>\n                    Current Amount: <span id=\"currentAmount\"></span>\n                </p>\n                <p id=\"fundsDepleted\" className=\"center\"></p>\n                <button onClick={rollDice} className=\"btn\">\n                    Roll Dice\n                </button>{\" \"}\n            </div>\n            <div class=\"row\">\n                <div class=\"column center\">\n                    <h1>You</h1>\n                    <img id=\"userDice\" src={process.env.PUBLIC_URL + userDice} />\n                </div>\n\n                <div class=\"column center\">\n                    <h1>Computer</h1>\n                    <img id=\"computerDice\" src={process.env.PUBLIC_URL + computerDice} />\n                </div>\n            </div>\n            <img id=\"outcome\" className=\"outcomeText\" />\n            <img src={giphy} className=\"gif center\" />\n            <br />\n        </div>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}